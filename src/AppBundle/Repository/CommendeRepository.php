<?php

namespace AppBundle\Repository;
use AppBundle\Entity\PointVente; 
use AppBundle\Entity\User; 
use Doctrine\ORM\NoResultException;
use AppBundle\Entity\Campagne;
/**
 * CommendeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommendeRepository extends \Doctrine\ORM\EntityRepository
{
	  	 public function findByPointVente(PointVente $pointVente){
           $qb = $this->createQueryBuilder('c')
           ->where('c.pointVente=:pointVente')
           ->andWhere('c.date is null or c.date>=:startDate')
           ->setParameter('startDate', new \DateTime('first day of last month'))
           ->setParameter('pointVente', $pointVente)
           ->orderby('c.date','asc');
         return $qb->getQuery()->getResult();  
  }

  	  	public function findList(Campagne $campagne,User $user=null, PointVente $pointVente=null,$startDate=null, $endDate=null,$ville=null){
           $qb = $this->createQueryBuilder('c')->join('c.pointVente','p')->join('p.user','u')
           ->where('p.campagne=:campagne')->setParameter('campagne',$campagne);
          if($ville!=null){
           $qb->andWhere('u.ville=:ville')
          ->setParameter('ville', $ville);
          }
           if($pointVente!=null){
           $qb ->andWhere('c.pointVente=:pointVente')->setParameter('pointVente', $pointVente);
            }
           if($user!=null){
           $qb ->andWhere('p.user=:user')->setParameter('user', $user);
            }            
             if($startDate!=null){
           $qb->andWhere('c.date is null or c.date>=:startDate')->setParameter('startDate', new \DateTime($startDate));
          }
          if($endDate!=null){
           $qb->andWhere('c.date is null or c.date<=:endDate')->setParameter('endDate',new \DateTime($endDate));
          }
         return $qb->getQuery()->getResult();  
  }


    public function findByInsidentList(Campagne $campagne,$insident, $startDate=null, $endDate=null,$ville=null){
           $qb = $this->createQueryBuilder('c')->join('c.pointVente','p')->join('p.user','u')
           ->where('p.campagne=:campagne')->setParameter('campagne',$campagne);
           if($ville!=null){
           $qb->andWhere('u.ville=:ville')
          ->setParameter('ville', $ville);
          }
           if($insident!=null){
           $qb ->andWhere('c.typeInsident=:typeInsident')->setParameter('typeInsident', $insident);
            }
             if($startDate!=null){
           $qb->andWhere('c.date is null or c.date>=:startDate')->setParameter('startDate', new \DateTime($startDate));
          }
          if($endDate!=null){
           $qb->andWhere('c.date is null or c.date<=:endDate')->setParameter('endDate',new \DateTime($endDate));
          }
         return $qb->getQuery()->getResult();  
  }


      public  function rapportInsident(Campagne $campagne=null,$startDate=null, $endDate=null,$ville=null){
        $qb = $this->createQueryBuilder('c')->join('c.pointVente','p')->join('p.user','u')
           ->where('p.campagne=:campagne')->setParameter('campagne',$campagne);
          if($ville!=null){
           $qb->andWhere('u.ville=:ville')
          ->setParameter('ville', $ville);
          }
         if($startDate!=null){
              $qb->andWhere('c.date is null or c.date>=:startDate')->setParameter('startDate', new \DateTime($startDate));
          }
          if($endDate!=null){
             $qb->andWhere('c.date is null or c.date<=:endDate')->setParameter('endDate',new \DateTime($endDate));
          }     
         $qb->select('c.typeInsident')
         ->addSelect('count(c.id) as nombre')
         ->addGroupBy('c.typeInsident');
           return $qb->getQuery()->getArrayResult(); 
  } 

}
