<?php

namespace AppBundle\Repository;
use AppBundle\Entity\User; 
/**
 * PointVenteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PointVenteRepository extends \Doctrine\ORM\EntityRepository
{
		  public function findByUser(User $user){
           $qb = $this->createQueryBuilder('p')
           ->where('p.user=:user')->setParameter('user', $user);
         return $qb->getQuery()->getResult();  
  }

    public function fiedSoldiersCount( $startDate=null, $endDate=null){

        $qb = $this->createQueryBuilder('p')->join('p.commendes', 'c');
         if($startDate!=null){
           $qb->andWhere('c.date is null or c.date>=:startDate')->setParameter('startDate', new \DateTime($startDate));
          }
          if($endDate!=null){
           $qb->andWhere('c.date is null or c.date<=:endDate')->setParameter('endDate',new \DateTime($endDate));
          }     
try {
    $qb->select('count(DISTINCT p.id) as nombre');
         return $qb->getQuery()->getSingleScalarResult();  
   } catch (NoResultException $e) {
        return 0;
     }
  }

    public function fieldSoldiers( $startDate=null, $endDate=null,$all=false){

        $qb = $this->createQueryBuilder('p')->join('p.commendes', 'c');
         if($startDate!=null){
           $qb->andWhere('c.date is null or c.date>=:startDate')->setParameter('startDate', new \DateTime($startDate));
          }
          if($endDate!=null){
           $qb->andWhere('c.date is null or c.date<=:endDate')->setParameter('endDate',new \DateTime($endDate));
          }
          if (!$all) 
           return $qb->getQuery()->setMaxResults(10)->getResult();

        return $qb->getQuery()->getResult();   
  }  	
}
