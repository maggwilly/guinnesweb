<?php

namespace AppBundle\Repository;
use Doctrine\ORM\NoResultException;
use AppBundle\Entity\Campagne;
/**
 * LigneRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LigneRepository extends \Doctrine\ORM\EntityRepository
{


   public function countAndCashByWeek(Campagne $campagne=null, $startDate=null, $endDate=null,$ville=null){
        $qb = $this->createQueryBuilder('l')
        ->join('l.commende', 'c')
        ->join('l.produit', 'p')
         ->where('p.campagne=:campagne')->setParameter('campagne',$campagne);
         if($startDate!=null){
           $qb->andWhere('c.date is null or c.date>=:startDate')->setParameter('startDate', new \DateTime($startDate));
          }
          if($endDate!=null){
           $qb->andWhere('c.date is null or c.date<=:endDate')->setParameter('endDate',new \DateTime($endDate));
          } 
   
       $qb->addOrderBy('c.week','asc')
       ->select('c.weekText')
       ->addSelect('sum(l.quantite) as nombre')
       ->addGroupBy('c.week')
       ->addGroupBy('c.weekText');
         return $qb->getQuery()->getArrayResult();  
  }

   public function countAndCashByMonth(Campagne $campagne=null, $startDate=null, $endDate=null,$ville=null){
        $qb = $this->createQueryBuilder('l')
        ->join('l.commende', 'c')
        ->join('l.produit', 'p')
        ->where('p.campagne=:campagne')->setParameter('campagne',$campagne);
         if($startDate!=null){
           $qb->andWhere('c.date is null or c.date>=:startDate')->setParameter('startDate', new \DateTime($startDate));
          }
          if($endDate!=null){
           $qb->andWhere('c.date is null or c.date<=:endDate')->setParameter('endDate',new \DateTime($endDate));
          } 
   
       $qb->addOrderBy('c.monthNumber','asc')
       ->select('c.month')
       ->addSelect('sum(l.quantite) as nombre')
        ->addGroupBy('c.monthNumber')
       ->addGroupBy('c.month');
         return $qb->getQuery()->getArrayResult();  
  }

}
